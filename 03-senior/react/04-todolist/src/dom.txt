//虚拟DOM原理

数据驱动UI

自己的想法:
1. 数据 (state)
2. 模版 (jsx)
3. 数据+模版->生成原始的真实DOM节点

4. 数据发生变化
5. 新的数据+模版->生成新的真实DOM节点
6. 用新的真实DOM节点替换原始的真实DOM节点

React的做法:
1. 数据 (state)
2. 模版 (jsx)
3. 数据+模版->生成原始的真实DOM节点
4. 原始的真实DOM节点 -> 对应的原始虚拟DOM(一个用来描述真实DOM节点的JS对象)

5. 数据发生变化
6. 新的数据 ->生成一个新的虚拟DOM
7. 找出原始虚拟DOM和新的虚拟DOM之间的区别(利用diff算法)
8. 只更新原始DOM节点中有区别的部分

